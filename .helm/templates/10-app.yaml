# App deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      serviceAccountName: {{ template "web.fullname" . }}-sa
      imagePullSecrets:
          - name: registrysecret
      containers:
        - name: web
          {{ if eq .Values.global.env "dev" }}
          image: {{ .Values.werf.image.webdev }}
          {{ else if eq .Values.global.env "test" }}
          image: {{ .Values.werf.image.webtest }}
          {{ else }}
          image: {{ .Values.werf.image.web }}
          {{ end }}
          env:
            - name: ENVIRONMENT
              value: {{ .Values.global.env | default "dev" }}
            - name: VUE_APP_API_V1
              value: {{ pluck .Values.global.env .Values.app.web.apiV1 | first | default .Values.app.web.apiV1._default }}
            - name: VUE_APP_API_V2
              value: {{ pluck .Values.global.env .Values.app.web.apiV2 | first | default .Values.app.web.apiV2._default }}

# Cluster IP
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}
spec:
  selector:
    app: {{ .Chart.Name }}
  clusterIP: None
  ports:
    - name: http-app
      port: 8080
  type: ClusterIP

# Ingress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "3000m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  name: {{ .Chart.Name }}
spec:
  rules:
    - host: {{ .Values.global.ci_url }}
      http:
        paths:
          - backend:
              service:
                name: {{ .Chart.Name }}
                port:
                  name: http-app
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - {{ .Values.global.ci_url }}
      secretName: ingress-tls

# HTTPS certificate manager
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ .Chart.Name }}
spec:
  dnsNames:
    - {{ .Values.global.ci_url }}
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt
  secretName: ingress-tls

# Pod autoscaling
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: {{ .Chart.Name }}
  labels:
    name: {{ .Chart.Name }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: {{ .Chart.Name }}
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: backend
        minAllowed:
          memory: "1Gi"
          cpu: "500m"
        maxAllowed:
          memory: "4Gi"
          cpu: "2"
        mode: Auto
